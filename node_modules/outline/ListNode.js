'use strict';var g=require("outline"),h=require("outline/ListItemNode");function l(b,...a){a.forEach(c=>{null!=c&&"string"===typeof c&&b.classList.add(...c.split(" "))})}function m(b,...a){a.forEach(c=>{b.classList.remove(...c.split(" "))})}
class n extends g.ElementNode{static getType(){return"list"}static clone(b){return new n(b.__tag,b.__start,b.__key)}constructor(b,a,c){super(c);this.__tag=b;this.__start=a}getTag(){return this.__tag}createDOM(b){const a=document.createElement(this.__tag);1!==this.__start&&a.setAttribute("start",String(this.__start));p(a,b.theme,this);return a}updateDOM(b,a,c){if(b.__tag!==this.__tag)return!0;p(a,c.theme,this);return!1}canBeEmpty(){return!1}append(...b){for(let c=0;c<b.length;c++){var a=b[c];if(h.$isListItemNode(a))super.append(a);
else{const d=h.$createListItemNode();q(a)?d.append(a):(a=g.$createTextNode(a.getTextContent()),d.append(a));super.append(d)}}return this}}function p(b,a,c){const d=[],k=[];var e=a.list;if(void 0!==e){e=e[c.__tag];if(a.nestedList)var f=a.nestedList.list;void 0!==e&&(a=e.split(" "),d.push(...a));void 0!==f&&(f=f.split(" "),h.$isListItemNode(c.getParent())?d.push(...f):k.push(...f))}0<d.length&&l(b,...d);0<k.length&&m(b,...k)}function q(b){return b instanceof n}
exports.$createListNode=function(b,a=1){return new n(b,a)};exports.$isListNode=q;exports.ListNode=n;
