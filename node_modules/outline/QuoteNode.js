'use strict';var c=require("outline"),e=require("outline/ParagraphNode");function f(a,...b){b.forEach(d=>{null!=d&&"string"===typeof d&&a.classList.add(...d.split(" "))})}
class g extends c.ElementNode{static getType(){return"quote"}static clone(a){return new g(a.__key)}constructor(a){super(a)}createDOM(a){const b=document.createElement("blockquote");f(b,a.theme.quote);return b}updateDOM(){return!1}insertNewAfter(){const a=e.$createParagraphNode(),b=this.getDirection();a.setDirection(b);this.insertAfter(a);return a}collapseAtStart(){const a=e.$createParagraphNode();this.getChildren().forEach(b=>a.append(b));this.replace(a);return!0}}exports.$createQuoteNode=function(){return new g};
exports.$isQuoteNode=function(a){return a instanceof g};exports.QuoteNode=g;
