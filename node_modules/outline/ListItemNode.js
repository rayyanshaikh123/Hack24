'use strict';var f=require("outline"),g=require("outline/ParagraphNode"),l=require("outline/ListNode"),m=require("outline/ListItemNode");function n(a){throw Error(`Minified Outline error #${a}; see codes.json for the full message or `+"use the non-minified dev environment for full errors and additional helpful warnings.");}function p(a,...c){c.forEach(b=>{null!=b&&"string"===typeof b&&a.classList.add(...b.split(" "))})}function q(a,...c){c.forEach(b=>{a.classList.remove(...b.split(" "))})}
class r extends f.ElementNode{static getType(){return"listitem"}static clone(a){return new r(a.__key)}constructor(a){super(a)}createDOM(a){const c=document.createElement("li");t(c,a.theme,this);return c}updateDOM(a,c,b){t(c,b.theme,this);return!1}append(...a){for(let c=0;c<a.length;c++){const b=a[c];if(f.$isElementNode(b)&&this.canMergeWith(b)){const d=b.getChildren();this.append(...d);b.remove()}else super.append(b)}return this}replace(a){if(u(a))return super.replace(a);const c=this.getParentOrThrow();
if(l.$isListNode(c)){var b=c.__children;const e=b.length;var d=b.indexOf(this.__key);if(0===d)c.insertBefore(a);else if(d===e-1)c.insertAfter(a);else{b=l.$createListNode(c.__tag);const h=c.getChildren();for(d+=1;d<e;d++)b.append(h[d]);c.insertAfter(a);a.insertAfter(b)}this.remove();1===e&&c.remove()}return a}insertAfter(a){if(u(a))return super.insertAfter(a);var c=this.getParentOrThrow();l.$isListNode(c)||n(1);if(l.$isListNode(a)&&a.getTag()===c.getTag()){c=a;a=a.getChildren();for(var b=a.length-
1;0<=b;b--)c=a[b],this.insertAfter(c);return c}b=this.getNextSiblings();c.insertAfter(a);if(0!==b.length){const d=l.$createListNode(c.getTag());b.forEach(e=>d.append(e));a.insertAfter(d)}return a}insertNewAfter(){var a=this.getNextSibling();const c=this.getPreviousSibling();var b=this.getParent();l.$isListNode(b)||n(2);for(var d=b;null!==d;)d=d.getParent(),l.$isListNode(d)&&(b=d);d=!0;var e=this.getFirstChild();if(l.$isListNode(e))d=!1;else for(e=this;null!==e;)m.$isListItemNode(e)&&0<e.getNextSiblings().length&&
(d=!1),e=e.getParent();f.$isElementNode(b)&&""===this.getTextContent()&&(null===c||null===a)&&d?(null===a?(a=g.$createParagraphNode(),b.insertAfter(a)):(a=g.$createParagraphNode(),b.insertBefore(a)),this.remove(),b.isEmpty()&&b.remove()):(a=v(),this.insertAfter(a));return a}collapseAtStart(a){const c=g.$createParagraphNode();this.getChildren().forEach(h=>c.append(h));var b=this.getParentOrThrow(),d=b.getParentOrThrow();const e=u(d);1===b.getChildrenSize()?e?(b.remove(),d.select()):(b.replace(c),b=
a.anchor,a=a.focus,d=c.getKey(),"element"===b.type&&b.getNode().is(this)&&b.set(d,b.offset,"element"),"element"===a.type&&a.getNode().is(this)&&a.set(d,a.offset,"element")):(b.insertBefore(c),this.remove());return!0}canInsertAfter(a){return u(a)}canReplaceWith(a){return u(a)}canMergeWith(a){return g.$isParagraphNode(a)||u(a)}}
function t(a,c,b){const d=[],e=[],h=c.listitem;if(c.nestedList)var k=c.nestedList.listitem;void 0!==h&&(c=h.split(" "),d.push(...c));void 0!==k&&(k=k.split(" "),b.getChildren().some(w=>l.$isListNode(w))?d.push(...k):e.push(...k));0<d.length&&p(a,...d);0<e.length&&q(a,...e)}function v(){return new r}function u(a){return a instanceof r}exports.$createListItemNode=v;exports.$isListItemNode=u;exports.ListItemNode=r;
